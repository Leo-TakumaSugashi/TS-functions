function TS_tform(data)
%% TS_tform(2D-Image)
%    Edit by Sugashi. 2016 Aug.
% 
% <For example...>
% TS_tform(imread('cameraman.tif'))


fgh = figure('Posi',[50 324 800 550],...
    'toolbar','figure');
axh = axes('Unit','Normalized',...
    'Position',[0.01 0.1 0.98 0.8]);
imh = imagesc(data(:,:,end));
axis image 
colormap(gray)
set(axh,'Clim',[min(data(:)) max(data(:))])
setappdata(fgh,'imh',imh);
setappdata(fgh,'data',data);

H(1).slh = uicontrol('Style','slider',...
    'Unit','Normalized',...
    'BackgroundColor',[0.5 0.5 0.5],...
    'Position',[0 0 .2 0.04],...
    'Value',0,...
    'Max',1,'Min',-1,...
    'SliderStep',[1/200 1/10],...
    'Callback',@Callback_slider);
H(1).txh = uicontrol('Style','text',...
    'unit','Normalized',...
    'Position',[0 0.04 0.2 0.03],...
    'String',num2str(0));

H(2).slh = uicontrol('Style','slider',...
    'Unit','Normalized',...
    'BackgroundColor',[0.5 0.5 0.5],...
    'Position',[0.2 0 .2 0.04],...
    'Value',0,...
    'Max',1/100,'Min',-1/100,...
    'SliderStep',[1/(2*10^3) 1/10^2],...
    'Callback',@Callback_slider);
H(2).txh = uicontrol('Style','text',...
    'unit','Normalized',...
    'Position',[.2 0.04 0.2 0.03],...
    'String',num2str(0));

H(3).slh = uicontrol('Style','slider',...
    'Unit','Normalized',...
    'BackgroundColor',[0.5 0.5 0.5],...
    'Position',[0.5 0 .2 0.04],...
    'Value',0,...
    'Max',1,'Min',-1,...
    'SliderStep',[1/200 1/10],...
    'Callback',@Callback_slider);
H(3).txh = uicontrol('Style','text',...
    'unit','Normalized',...
    'Position',[.5 0.04 0.2 0.03],...
    'String',num2str(0));

H(4).slh = uicontrol('Style','slider',...
    'Unit','Normalized',...
    'BackgroundColor',[0.5 0.5 0.5],...
    'Position',[0.7 0 .2 0.04],...
    'Value',0,...
    'Max',1/100,'Min',-1/100,...
    'SliderStep',[1/(2*10^3) 1/100],...
    'Callback',@Callback_slider);
H(4).txh = uicontrol('Style','text',...
    'unit','Normalized',...
    'Position',[.7 0.04 0.2 0.03],...
    'String',num2str(0));


txh = uicontrol('Style','text',...
    'unit','Normalized',...
    'Position',[.0 0.97 0.2 0.03],...
    'String','[Ysize Xsize]');
txh(2) = uicontrol('Style','text',...
    'unit','Normalized',...
    'Position',[.2 0.97 0.2 0.03],...
    'String','X[min max]');
txh(3) = uicontrol('Style','text',...
    'unit','Normalized',...
    'Position',[.4 0.97 0.2 0.03],...
    'String','Y[min max]');
txh(4) = uicontrol('Style','Edit',...
    'unit','Normalized',...
    'Position',[.0 0.94 0.2 0.03],...
    'String',['[' num2str(size(data)) ']']);
txh(5) = uicontrol('Style','Edit',...
    'unit','Normalized',...
    'Position',[.2 0.94 0.2 0.03],...
    'String',['[1 ' num2str(size(data,2)) ']']);
txh(6) = uicontrol('Style','Edit',...
    'unit','Normalized',...
    'Position',[.4 0.94 0.2 0.03],...
    'String',['[1 ' num2str(size(data,1)) ']']);
uih = uicontrol('unit','Normalized',...
    'Position',[.65 0.94 0.12 0.05],...
    'String','Apply',...
    'FontSize',20,...
    'Callback',@Callback_slider);
CropOnOff = uicontrol('Style','checkbox',...
    'unit','Normalized',...
    'Position',[.61 0.94 0.03 0.05]);
uih = uicontrol('unit','Normalized',...
    'Position',[.85 0.94 0.13 0.05],...
    'String','Save Image',...
    'FontSize',12,...
    'Callback',@Callback_Save);

setappdata(fgh,'Handle',H);
setappdata(fgh,'txh',txh)
setappdata(fgh,'CropOnOff',CropOnOff)
Callback_slider(txh(1))
end

function Callback_slider(a,~)
fgh = get(a,'Parent');
data = getappdata(fgh,'data');
imh = getappdata(fgh,'imh');
H = getappdata(fgh,'Handle');
txh = getappdata(fgh,'txh');
CropOnOff = getappdata(fgh,'CropOnOff');

for n = 1:length(H)
    val = get(H(n).slh,'value');
    set(H(n).txh,'String',num2str(val))
end
T = GetT(fgh);
tform = projective2d(T);
if get(CropOnOff,'Value')
    siz = eval(get(txh(4),'String'));
    Xlim = eval(get(txh(5),'String'));
    Ylim = eval(get(txh(6),'String'));
    RA = imref2d(siz,Xlim,Ylim);
    im = imwarp(data,tform,'OutputView',RA,'Interp','bilinear');
else
    im = imwarp(data,tform);
end
set(imh,'Cdata',im)
axis auto
axis image
end

function T = GetT(fgh)
H = getappdata(fgh,'Handle');
T=eye(3,3);
T(1,2) = get(H(1).slh,'Value');
T(1,3) = get(H(2).slh,'Value');
T(2,1) = get(H(3).slh,'Value');
T(2,3) = get(H(4).slh,'Value');
end

function Callback_Save(oh,~)
fgh = get(oh,'Parent');
imh = getappdata(fgh,'imh');
disp('SAve')
[filename,pathname] = uiputfile(...
    {'*.tif';'*.bmp';'*.jpg'},'Save Image','Mtg');
if filename==0
    return
end
Nowdir = cd;
cd(pathname)
im = get(imh,'Cdata');
map = gray(256);
type = filename;
p = find(type=='.');
type(1:p) = [];

if ismatrix(im)    
    switch class(im)
        case 'uint8'
            bw = rgb2(gray(im));
            bw = bw == 0;
            for n = 1:3
                rgb = im(:,:,n);
                rgb(bw) = 256;
                im(:,:,n) = rgb;
            end
            figure,imshow(im),
            imwrite(im,map,filename,type)
        otherwise
            im = double(im) - double(min(im(:)));
            bw = rgb2(gray(im));
            bw = bw == 0;            
            im = uint8(im / max(im(:)) * 255);
            for n = 1:3
                rgb = im(:,:,n);
                rgb(bw) = 256;
                im(:,:,n) = rgb;
            end
            imwrite(im,map,filename,type)
    end
else
    imwrite(im,filename,type)
end
cd(Nowdir)
end



